# Options for analysis running.
run:
  # The default concurrency value is the number of available CPU.
  concurrency: 4
  # Timeout for analysis, e.g. 30s, 5m.
  # Default: 1m
  timeout: 5m
  # Exit code when at least one issue was found.
  # Default: 1
  issues-exit-code: 2
  # Include test files or not.
  # Default: true
  tests: false
  # List of build tags, all linters use it.
  # Default: [].
  build-tags:
    - mytag
  # Which dirs to skip: issues from them won't be reported.
  # Can use regexp here: `generated.*`, regexp is applied on full path.
  # Default value is empty list,
  # but default dirs are skipped independently of this option's value (see skip-dirs-use-default).
  # "/" will be replaced by current OS file path separator to properly work on Windows.
  # MarineSnow: script no need to lint
  skip-dirs:
    - script
  # Enables skipping of directories:
  # - vendor$, third_party$, testdata$, examples$, Godeps$, builtin$
  # Default: true
  skip-dirs-use-default: true
  # Which files to skip: they will be analyzed, but issues from them won't be reported.
  # Default value is empty list,
  # but there is no need to include all autogenerated files,
  # we confidently recognize autogenerated files.
  # If it's not please let us know.
  # "/" will be replaced by current OS file path separator to properly work on Windows.
  skip-files:
    - ".*\\.my\\.go$"
    - _test.go
  # If set we pass it to "go list -mod={option}". From "go help modules":
  # If invoked with -mod=readonly, the go command is disallowed from the implicit
  # automatic updating of go.mod described above. Instead, it fails when any changes
  # to go.mod are needed. This setting is most useful to check that go.mod does
  # not need updates, such as in a continuous integration and testing system.
  # If invoked with -mod=vendor, the go command assumes that the vendor
  # directory holds the correct copies of dependencies and ignores
  # the dependency descriptions in go.mod.
  #
  # Allowed values: readonly|vendor|mod
  # By default, it isn't set.
  # modules-download-mode: readonly

  # Allow multiple parallel golangci-lint instances running.
  # If false (default) - golangci-lint acquires file lock on start.
  allow-parallel-runners: true
  # Define the Go version limit.
  # Mainly related to generics support since go1.18.
  # Default: use Go version from the go.mod file, fallback on the env var `GOVERSION`, fallback on 1.18
  # go: '1.19'


# output configuration options
output:
  # Format: colored-line-number|line-number|json|tab|checkstyle|code-climate|junit-xml|github-actions
  #
  # Multiple can be specified by separating them by comma, output can be provided
  # for each of them by separating format name and path by colon symbol.
  # Output path can be either `stdout`, `stderr` or path to the file to write to.
  # Example: "checkstyle:report.json,colored-line-number"
  #
  # Default: colored-line-number
  format: colored-line-number
  # Print lines of code with issue.
  # Default: true
  print-issued-lines: true
  # Print linter name in the end of issue text.
  # Default: true
  print-linter-name: true
  # Make issues output unique by line.
  # Default: true
  uniq-by-line: true
  # Add a prefix to the output file references.
  # Default is no prefix.
  path-prefix: ""
  # Sort results by: filepath, line and column.
  sort-results: true


# All available settings of specific linters.
linters-settings:
  errcheck:
    # Report about not checking of errors in type assertions: `a := b.(MyStruct)`.
    # Such cases aren't reported by default.
    # Default: false
    check-type-assertions: true
    # report about assignment of errors to blank identifier: `num, _ := strconv.Atoi(numStr)`.
    # Such cases aren't reported by default.
    # Default: false
    check-blank: true
    # To disable the errcheck built-in exclude list.
    # See `-excludeonly` option in https://github.com/kisielk/errcheck#excluding-functions for details.
    # Default: false
    disable-default-exclusions: true
  gosimple:
    # Select the Go version to target.
    # Default: 1.13
    # Deprecated: use the global `run.go` instead.
    go: "1.15"
    # Sxxxx checks in https://staticcheck.io/docs/configuration/options/#checks
    # Default: ["*"]
    checks: ["all"]
  govet:
    # report about shadowed variables
    check-shadowing: true

    # settings per analyzer
    settings:
      printf: # analyzer name, run `go tool vet help` to see all analyzers
        funcs: # run `go tool vet help printf` to see available settings for `printf` analyzer
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf

    # enable or disable analyzers by name
    enable:
      - atomicalign
    enable-all: false
    disable:
      - shadow
    disable-all: false
  staticcheck:
    # Select the Go version to target. The default is '1.13'.
    go: "1.16"
    # https://staticcheck.io/docs/options#checks
    checks: [ "all" ]
  cyclop:
    # The maximal code complexity to report.
    # Default: 10
    max-complexity: 20
    # The maximal average package complexity.
    # If it's higher than 0.0 (float) the check is enabled
    # Default: 0.0
    package-average: 0.0
    # Should ignore tests.
    # Default: false
    skip-tests: true
  dogsled:
    # Checks assignments with too many blank identifiers.
    # Default: 2
    max-blank-identifiers: 2
  dupl:
    # Tokens count to trigger issue.
    # Default: 150
    threshold: 100
  errorlint:
    # Check whether fmt.Errorf uses the %w verb for formatting errors.
    # See the https://github.com/polyfloyd/go-errorlint for caveats.
    # Default: true
    errorf: true
    # Check for plain type assertions and type switches.
    # Default: true
    asserts: true
    # Check for plain error comparisons.
    # Default: true
    comparison: true
  exhaustive:
    # Program elements to check for exhaustiveness.
    # Default: [ switch ]
    check:
      - switch
    # Check switch statements in generated files also.
    # Default: false
    check-generated: true
    # Presence of "default" case in switch statements satisfies exhaustiveness,
    # even if all enum members are not listed.
    # Default: false
    default-signifies-exhaustive: true
    # Enum members matching the supplied regex do not have to be listed in
    # switch statements to satisfy exhaustiveness.
    # Default: ""
    ignore-enum-members: "Example.+"
    # Consider enums only in package scopes, not in inner scopes.
    # Default: false
    package-scope-only: false
    # Only run exhaustive check on switches with "//exhaustive:enforce" comment.
    # Default: false
    explicit-exhaustive-switch: false
    # Only run exhaustive check on map literals with "//exhaustive:enforce" comment.
    # Default: false
    explicit-exhaustive-map: false
  lll:
    # max line length, lines longer will be reported. Default is 120.
    # '\t' is counted as 1 character by default, and can be changed with the tab-width option
    line-length: 120
    # tab width in spaces. Default to 1.
    tab-width: 4
  gocognit:
    # Minimal code complexity to report
    # Default: 30 (but we recommend 10-20)
    min-complexity: 20
  goconst:
    # Minimal length of string constant.
    # Default: 3
    min-len: 3
    # Minimum occurrences of constant string count to trigger issue.
    # Default: 3
    min-occurrences: 3
    # Ignore test files.
    # Default: false
    ignore-tests: false
    # Look for existing constants matching the values.
    # Default: true
    match-constant: true
    # Search also for duplicated numbers.
    # Default: false
    numbers: false
    # Minimum value, only works with goconst.numbers
    # Default: 3
    min: 3
    # Maximum value, only works with goconst.numbers
    # Default: 3
    max: 3
    # Ignore when constant is not used as function argument.
    # Default: true
    ignore-calls: true
  gocyclo:
    # Minimal code complexity to report.
    # Default: 30 (but we recommend 10-20)
    min-complexity: 20
  godot:
    # Comments to be checked: `declarations`, `toplevel`, or `all`.
    # Default: declarations
    scope: declarations
    # List of regexps for excluding particular comment lines from check.
    # Default: []
    exclude:
      # Exclude todo and fixme comments.
      - "^fixme:"
      - "^todo:"
    # Check that each sentence ends with a period.
    # Default: true
    period: true
    # Check that each sentence starts with a capital letter.
    # Default: false
    capital: false
  gofmt:
    # Simplify code: gofmt with `-s` option.
    # Default: true
    simplify: true
  gofumpt:
    # Select the Go version to target.
    # Default: "1.15"
    # Deprecated: use the global `run.go` instead.
    lang-version: "1.15"

    # Choose whether to use the extra rules.
    # Default: false
    extra-rules: false
  goheader:
    # Supports two types 'const` and `regexp`.
    # Values can be used recursively.
    # Default: {}
    values:
      const:
        # Define here const type values in format k:v.
        # For example:
        # COMPANY: MY COMPANY
      regexp:
        # Define here regexp type values.
        # for example:
        # AUTHOR: .*@mycompany\.com
    # The template use for checking.
    # Default: ""
    template: # |-
      # Put here copyright header template for source code files
      # For example:
      # Note: {{ YEAR }} is a builtin value that returns the year relative to the current machine time.
      #
      # {{ AUTHOR }} {{ COMPANY }} {{ YEAR }}
      # SPDX-License-Identifier: Apache-2.0

      # Licensed under the Apache License, Version 2.0 (the "License");
      # you may not use this file except in compliance with the License.
      # You may obtain a copy of the License at:

      #   http://www.apache.org/licenses/LICENSE-2.0

      # Unless required by applicable law or agreed to in writing, software
      # distributed under the License is distributed on an "AS IS" BASIS,
      # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      # See the License for the specific language governing permissions and
      # limitations under the License.
    # As alternative of directive 'template', you may put the path to file with the template source.
    # Useful if you need to load the template from a specific file.
    # Default: ""
    template-path:
  gosec:
    # To select a subset of rules to run.
    # Available rules: https://github.com/securego/gosec#available-rules
    includes:
      - G401 # Detect the usage of DES, RC4, MD5 or SHA1
      - G306 # Poor file permissions used when writing to a new file
      - G101 # Look for hard coded credentials
    # To specify a set of rules to explicitly exclude.
    # Available rules: https://github.com/securego/gosec#available-rules
    excludes:
      - G204 # Audit use of command execution
    # Exclude generated files
    exclude-generated: true
    # Filter out the issues with a lower severity than the given value. Valid options are: low, medium, high.
    severity: "low"
    # Filter out the issues with a lower confidence than the given value. Valid options are: low, medium, high.
    confidence: "low"
    # To specify the configuration of rules.
    # The configuration of rules is not fully documented by gosec:
    # https://github.com/securego/gosec#configuration
    # https://github.com/securego/gosec/blob/569328eade2ccbad4ce2d0f21ee158ab5356a5cf/rules/rulelist.go#L60-L102
    config:
      G306: "0600"
      G101:
        pattern: "(?i)example"
        ignore_entropy: false
        entropy_threshold: "80.0"
        per_char_threshold: "3.0"
        truncate: "32"
  makezero:
    # Allow only slices initialized with a length of zero.
    # Default: false
    always: false
  misspell:
    # Correct spellings using locale preferences for US or UK.
    # Setting locale to US will correct the British spelling of 'colour' to 'color'.
    # Default is to use a neutral variety of English.
    locale: US
    # Default: []
    ignore-words:
      - someword
  nakedret:
    # Make an issue if func has more lines of code than this setting, and it has naked returns.
    # Default: 30
    max-func-lines: 30
  nestif:
    # Minimal complexity of if statements to report.
    # Default: 5
    min-complexity: 5
  nlreturn:
    # Size of the block (including return statement that is still "OK")
    # so no return split required.
    # Default: 1
    block-size: 1
  nolintlint:
    # Disable to ensure that all nolint directives actually have an effect.
    # Default: false
    allow-unused: false
    # Exclude following linters from requiring an explanation.
    # Default: []
    allow-no-explanation: []
    # Enable to require an explanation of nonzero length after each nolint directive.
    # Default: false
    require-explanation: false
    # Enable to require nolint directives to mention the specific linter being suppressed.
    # Default: false
    require-specific: true
  predeclared:
    # Comma-separated list of predeclared identifiers to not report on.
    # Default: ""
    ignore: ""
    # Include method names and field names (i.e., qualified names) in checks.
    # Default: false
    q: false
  rowserrcheck:
    # database/sql is always checked
    # Default: []
    packages:
      - github.com/jmoiron/sqlx
  stylecheck:
    # Select the Go version to target.
    # Default: 1.13
    # Deprecated: use the global `run.go` instead.
    go: "1.16"
    # STxxxx checks in https://staticcheck.io/docs/configuration/options/#checks
    # Default: ["*"]
    checks: ["all", "-ST1000", "-ST1003", "-ST1016", "-ST1020", "-ST1021", "-ST1022"]
    # https://staticcheck.io/docs/configuration/options/#dot_import_whitelist
    # Default: ["github.com/mmcloughlin/avo/build", "github.com/mmcloughlin/avo/operand", "github.com/mmcloughlin/avo/reg"]
    dot-import-whitelist:
      - fmt
    # https://staticcheck.io/docs/configuration/options/#initialisms
    # Default: ["ACL", "API", "ASCII", "CPU", "CSS", "DNS", "EOF", "GUID", "HTML", "HTTP", "HTTPS", "ID", "IP", "JSON", "QPS", "RAM", "RPC", "SLA", "SMTP", "SQL", "SSH", "TCP", "TLS", "TTL", "UDP", "UI", "GID", "UID", "UUID", "URI", "URL", "UTF8", "VM", "XML", "XMPP", "XSRF", "XSS", "SIP", "RTP", "AMQP", "DB", "TS"]
    initialisms: ["ACL", "API", "ASCII", "CPU", "CSS", "DNS", "EOF", "GUID", "HTML", "HTTP", "HTTPS", "ID", "IP", "JSON", "QPS", "RAM", "RPC", "SLA", "SMTP", "SQL", "SSH", "TCP", "TLS", "TTL", "UDP", "UI", "GID", "UID", "UUID", "URI", "URL", "UTF8", "VM", "XML", "XMPP", "XSRF", "XSS", "SIP", "RTP", "AMQP", "DB", "TS"]
    # https://staticcheck.io/docs/configuration/options/#http_status_code_whitelist
    # Default: ["200", "400", "404", "500"]
    http-status-code-whitelist: ["200", "400", "404", "500"]
  thelper:
    test:
      # Check *testing.T is first param (or after context.Context) of helper function.
      # Default: true
      first: true
      # Check *testing.T param has name t.
      # Default: true
      name: true
      # Check t.Helper() begins helper function.
      # Default: true
      begin: true
    benchmark:
      # Check *testing.B is first param (or after context.Context) of helper function.
      # Default: true
      first: true
      # Check *testing.B param has name b.
      # Default: true
      name: true
      # Check b.Helper() begins helper function.
      # Default: true
      begin: true
    tb:
      # Check *testing.TB is first param (or after context.Context) of helper function.
      # Default: true
      first: true
      # Check *testing.TB param has name tb.
      # Default: true
      name: true
      # Check tb.Helper() begins helper function.
      # Default: true
      begin: true
    fuzz:
      # Check *testing.F is first param (or after context.Context) of helper function.
      # Default: true
      first: true
      # Check *testing.F param has name f.
      # Default: true
      name: true
      # Check f.Helper() begins helper function.
      # Default: true
      begin: true
  whitespace:
    # Enforces newlines (or comments) after every multi-line if statement.
    # Default: false
    multi-if: false
    # Enforces newlines (or comments) after every multi-line function signature.
    # Default: false
    multi-func: false
  unparam:
    # Inspect exported functions.
    #
    # Set to true if no external program/library imports your code.
    # XXX: if you enable this setting, unparam will report a lot of false-positives in text editors:
    # if it's called for subdir of a project it can't find external interfaces. All text editor integrations
    # with golangci-lint call it on a directory with the changed file.
    #
    # Default: false
    check-exported: false
  funlen:
    # Checks the number of lines in a function.
    # If lower than 0, disable the check.
    # Default: 60
    lines: 150
    # Checks the number of statements in a function.
    # If lower than 0, disable the check.
    # Default: 40
    statements: 50

linters:
  # Disable all linters.
  # Default: false
  disable-all: true
  # Enable specific linter
  # https://golangci-lint.run/usage/linters/#enabled-by-default
  enable:
    # default linters
    - errcheck
    - gosimple
    - govet
    - ineffassign
    - staticcheck
    - typecheck
    - unused

    # optional linters
    - asciicheck
    - cyclop
    - dogsled
    - bodyclose
    - dupl
    - durationcheck
    - errorlint
    - exhaustive
    - lll
    - exportloopref
    - gochecknoinits
    - gocognit
    - goconst
    - gocyclo
    - godot
    - gofmt
    - gofumpt
    - goheader
    - goprintffuncname
    - gosec
    - makezero
    - misspell
    - nakedret
    - nestif
    - nilerr
    - nlreturn
    - noctx
    - nolintlint
    - paralleltest
    - predeclared
    - rowserrcheck
    - sqlclosecheck
    - stylecheck
    - thelper
    - tparallel
    - unconvert
    - wastedassign
    - whitespace
    - unparam
    - funlen
    # MarineSnow: enable this when performance develop
    # - gocritic
    # - prealloc
    # Run only fast linters from enabled linters set (first run won't be fast)
    # Default: false
    #
    # enable after framework finish develop
    # - depguard
    # - godox
    # - goimports
    # - gomodguard
    # - importas
    # - promlinter
    # - revive
    # - wsl
  fast: false




